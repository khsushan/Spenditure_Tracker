/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.spendituretracker.view.summary;

import com.java.spendituretracker.common.Formatter;
import com.java.spendituretracker.controller.ExpenditureController;
import com.java.spendituretracker.controller.IncomeController;
import com.java.spendituretracker.controller.inf.ExpenditureControllerInf;
import com.java.spendituretracker.controller.inf.IncomeControllerInf;
import com.java.spendituretracker.dto.ExpenditureListDto;
import com.java.spendituretracker.view.expenditure.AddExpenditureView;
import com.java.spendituretracker.view.income.AddIncomeView;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author Calcey
 */
public class SummaryView extends javax.swing.JPanel {

    private ExpenditureControllerInf expenditureControllerInf;
    private IncomeControllerInf incomeControllerInf;
    private int month;

    /**
     * Creates new form SummaryView
     */
    public SummaryView() {
        initComponents();
        DefaultTableCellRenderer tableCellRenderer = new DefaultTableCellRenderer();
        tableCellRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        TableColumn tableColumn = expenditureSummaryTable.getColumnModel().getColumn(1);
        expenditureSummaryTable.setBackground(UIManager.getColor(new JTableHeader().getBackground()));
        tableColumn.setCellRenderer(tableCellRenderer);
    }

    public SummaryView(int month) {
        this();
        expenditureControllerInf = new ExpenditureController();
        incomeControllerInf = new IncomeController();
        this.month = month;
        calculateTotal(month);
    }

    private double loadExpneditures(int month) {
        double total = 0.00;
        try {
            ArrayList<ExpenditureListDto> expendituresByMonth = expenditureControllerInf.getExpendituresByMonth(month);
            DefaultTableModel model = (DefaultTableModel) expenditureSummaryTable.getModel();
            model.setNumRows(0);
            total = expendituresByMonth.stream().map((expenditureListDto) -> {
                model.addRow(new Object[]{expenditureListDto.getCategoryName(),
                    Formatter.currencyFormat(expenditureListDto.getAmount())});
                return expenditureListDto;
            }).map((expenditureListDto) -> expenditureListDto.getAmount()).reduce(total, (accumulator, _item) -> accumulator + _item);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(SummaryView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return total;
    }

    private double getIncomeByMonth(int month) {
        try {
            return incomeControllerInf.getTotalIncomeByMonth(month);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(SummaryView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 0;
    }

    private void calculateTotal(int month) {
        double expensesTotal = loadExpneditures(month);
        double incomeTotal = getIncomeByMonth(month);
        initializeProgressBar(expensesTotal, incomeTotal);
        expenditureLbl.setText(Formatter.currencyFormat(expensesTotal));
        expenditureLbl.setForeground(Color.red);
        incomeLbl.setText(Formatter.currencyFormat(incomeTotal));
        incomeLbl.setForeground(Color.GREEN);
        balanceLbl.setText(Formatter.currencyFormat(incomeTotal - expensesTotal));
        balanceLbl.setForeground(Color.blue);
    }

    private void initializeProgressBar(double expensesTotal, double incomeTotal) {

        if (incomeTotal > 0 || expensesTotal > 0) {
            progressBar.setForeground(Color.GREEN);
            progressBar.setBackground(Color.RED);
            progressBar.setMinimum(0);
            progressBar.setMaximum(100);
            progressBar.setValue(20);
            double incomeTotalValue = incomeTotal / (expensesTotal + incomeTotal) * 100;
            progressBar.setValue((int) incomeTotalValue);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new java.awt.List();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        incomeLbl = new javax.swing.JLabel();
        balanceLbl = new javax.swing.JLabel();
        expenditureLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expenditureSummaryTable = new javax.swing.JTable();
        incomeBtn = new javax.swing.JButton();
        expensesBtn = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setText("Income         : ");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setText("Expenditure :");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setText("Balance         :");

        incomeLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        incomeLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        incomeLbl.setText("0.00");

        balanceLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        balanceLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        balanceLbl.setText("0.00");

        expenditureLbl.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        expenditureLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        expenditureLbl.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(expenditureLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(balanceLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(incomeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(incomeLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(expenditureLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(balanceLbl))
                .addContainerGap())
        );

        expenditureSummaryTable.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        expenditureSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        expenditureSummaryTable.setShowHorizontalLines(false);
        expenditureSummaryTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(expenditureSummaryTable);

        incomeBtn.setText("Income");
        incomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeBtnActionPerformed(evt);
            }
        });

        expensesBtn.setText("Expenses");
        expensesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expensesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(expensesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(incomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incomeBtn)
                    .addComponent(expensesBtn))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void incomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeBtnActionPerformed
        AddIncomeView addIncomeView = new AddIncomeView(null, true);
        addIncomeView.setVisible(true);
        calculateTotal(this.month);
    }//GEN-LAST:event_incomeBtnActionPerformed

    private void expensesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expensesBtnActionPerformed
        AddExpenditureView addExpenditureView = new AddExpenditureView(null, true);
        addExpenditureView.setVisible(true);
        calculateTotal(this.month);
    }//GEN-LAST:event_expensesBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balanceLbl;
    private javax.swing.JLabel expenditureLbl;
    private javax.swing.JTable expenditureSummaryTable;
    private javax.swing.JButton expensesBtn;
    private javax.swing.JButton incomeBtn;
    private javax.swing.JLabel incomeLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.List list1;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
