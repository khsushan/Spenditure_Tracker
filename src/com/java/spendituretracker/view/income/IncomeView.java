/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.spendituretracker.view.income;

import com.java.spendituretracker.common.Formatter;
import com.java.spendituretracker.controller.IncomeController;
import com.java.spendituretracker.controller.inf.IncomeControllerInf;
import com.java.spendituretracker.dto.ExpenditureListDto;
import com.java.spendituretracker.dto.IncomeListDto;
import com.java.spendituretracker.view.summary.SummaryView;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author TSeneviratne
 */
public class IncomeView extends javax.swing.JPanel {
private IncomeControllerInf incomeControllerInf;
    /**
     * Creates new form IncomeView
     */
    public IncomeView(int month) {
        initComponents();
        DefaultTableCellRenderer tableCellRenderer = new DefaultTableCellRenderer();
        tableCellRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        TableColumn tableColumn = incomeSummaryTable.getColumnModel().getColumn(1);
        incomeSummaryTable.setBackground(UIManager.getColor(new JTableHeader().getBackground()));
        tableColumn.setCellRenderer(tableCellRenderer);
        incomeControllerInf = new IncomeController();
        loadIncomes(month);
    }
    
    private double loadIncomes(int month) {
        double total = 0.00;
        try {
            ArrayList<IncomeListDto> incomesByMonth = incomeControllerInf.getIncomeByMonth(month);
            DefaultTableModel model = (DefaultTableModel) incomeSummaryTable.getModel();
            model.setNumRows(0);
            total = incomesByMonth.stream().map((incomeListDto) -> {
                model.addRow(new Object[]{incomeListDto.getCategoryName(),
                    Formatter.currencyFormat(incomeListDto.getAmount())});
                return incomeListDto;
            }).map((incomeListDto) -> incomeListDto.getAmount()).reduce(total, (accumulator, _item) -> accumulator + _item);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(IncomeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return total;
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        incomeSummaryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        incomeBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Income");

        incomeSummaryTable.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        incomeSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        incomeSummaryTable.setShowHorizontalLines(false);
        incomeSummaryTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(incomeSummaryTable);

        jLabel2.setText("Available Incomes");

        incomeBtn.setText("Add");
        incomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(incomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
                        .addGap(234, 234, 234))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(incomeBtn)
                .addContainerGap(130, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void incomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeBtnActionPerformed
        AddIncomeView addIncomeView = new AddIncomeView(null, true);
        addIncomeView.setVisible(true);
    }//GEN-LAST:event_incomeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton incomeBtn;
    private javax.swing.JTable incomeSummaryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
